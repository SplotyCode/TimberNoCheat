package me.david.timbernocheat.checkes.exploits;

import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import com.google.common.base.Charsets;
import io.netty.buffer.ByteBuf;
import me.david.timbernocheat.TimberNoCheat;
import me.david.timbernocheat.checkmanager.Category;
import me.david.timbernocheat.checkmanager.Check;

public class Channels extends Check {

    private final int maxchannels;
    public Channels(){
        super("Channels", Category.EXPLOITS);
        maxchannels = getInt("maxchannels");
        instace = this;
    }

    /*
        check is registet in NBT class
     */
    public static void check(PacketEvent event){
        int channelsSize = event.getPlayer().getListeningPluginChannels().size();
        PacketContainer container = event.getPacket();
        ByteBuf buffer = container.getSpecificModifier(ByteBuf.class).read(0).copy();
        try {
            for (int i = 0; i < buffer.toString(Charsets.UTF_8).split("\0").length; i++)
                if (++channelsSize > instace.maxchannels){
                    TimberNoCheat.checkmanager.notify(instace, event.getPlayer(), " §6CHANELLSIZE: §b" + channelsSize);
                    instace.updateVio(instace, event.getPlayer(), channelsSize-instace.maxchannels, " §6CHANELLSIZE: §b" + channelsSize, " §6MAXCHANNELS: §b" + instace.maxchannels);
                    event.setCancelled(true);
                    return;
                }
        } finally {
            buffer.release();
        }
    }
    private static Channels instace;
}
