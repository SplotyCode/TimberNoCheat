package me.david.TimberNoCheat.checkes.exploits;

import me.david.TimberNoCheat.checkmanager.Category;
import me.david.TimberNoCheat.checkmanager.Check;
import me.david.TimberNoCheat.TimberNoCheat;
import net.minecraft.server.v1_8_R3.*;
import org.bukkit.Bukkit;
import org.bukkit.craftbukkit.v1_8_R3.inventory.CraftItemStack;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.player.PlayerEditBookEvent;
import org.bukkit.inventory.ItemStack;

import java.util.ArrayList;
import java.util.EnumSet;
import java.util.List;
import java.util.Set;

public class Book extends Check{

    public Book(){
        super("Book_JSON", Category.EXPLOITS);
    }
    private final Set<ChatClickable.EnumClickAction> filterActions = EnumSet.of(ChatClickable.EnumClickAction.RUN_COMMAND, ChatClickable.EnumClickAction.OPEN_FILE, ChatClickable.EnumClickAction.OPEN_URL, ChatClickable.EnumClickAction.SUGGEST_COMMAND);
    @EventHandler(priority=EventPriority.LOW)
    public void onBookEdit(final PlayerEditBookEvent e) {
        if(!TimberNoCheat.checkmanager.isvalid_create(e.getPlayer())){
            return;
        }
        final ItemStack is = e.getPlayer().getInventory().getItem(e.getSlot());
        if (filterBook(is) != null) {
            if(TimberNoCheat.instance.settings.exploit_book_cancel) {
                e.setCancelled(true);
            }
            TimberNoCheat.checkmanager.notify(this, e.getPlayer());
            if(TimberNoCheat.instance.settings.exploit_book_sendcommand){
                String message = TimberNoCheat.instance.settings.exploit_book_command;
                message.replace("/", "");
                message.replaceAll("%player%", e.getPlayer().getName());
                Bukkit.dispatchCommand(Bukkit.getConsoleSender(), message);
            }
        }
    }

    public ItemStack filterBook(ItemStack filterItem) {
        Object result = filterBook((Object)CraftItemStack.asNMSCopy((ItemStack)filterItem));
        return CraftItemStack.asBukkitCopy(((net.minecraft.server.v1_8_R3.ItemStack)result));
    }
    public boolean filterBook(Object filterItem) {
        net.minecraft.server.v1_8_R3.ItemStack mcStack = (net.minecraft.server.v1_8_R3.ItemStack)filterItem;
        try {
            NBTTagCompound tag = (mcStack = mcStack.cloneItemStack()).hasTag() ? mcStack.getTag() : null;
            NBTTagList pages = tag != null && tag.hasKeyOfType("pages", 9) ? tag.getList("pages", 8) : null;
            for (int i = 0; pages != null && i < pages.size(); ++i) {
                String jsonPage = pages.getString(i);
                IChatBaseComponent component = IChatBaseComponent.ChatSerializer.a((String)jsonPage);
                ArrayList<IChatBaseComponent> subComponents = new ArrayList<IChatBaseComponent>();
                addComponents(component, subComponents);
                for (IChatBaseComponent subComponent : subComponents) {
                    ChatModifier modifier = subComponent.getChatModifier();
                    ChatClickable clickable = modifier.h();
                    if (clickable == null || !this.filterActions.contains((Object)clickable.a())) continue;
                    return true;
                }
                jsonPage = IChatBaseComponent.ChatSerializer.a((IChatBaseComponent)component);
                pages.a(i, (NBTBase)new NBTTagString(jsonPage));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    public void addComponents(IChatBaseComponent component, List<IChatBaseComponent> list) {
        if (component != null) {
            list.add(component);
            List<IChatBaseComponent> children = component.a();
            if (children != null) {
                for (IChatBaseComponent child : children) {
                    addComponents(child, list);
                }
            }
        }
    }
}
